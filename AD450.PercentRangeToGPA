#Program will ask user to input their grade as a percentage. 
#The input must be an integer. 
#The program then uses the percentage grade and converts it to a GPA and prints that GPA for the user. 


{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9c841e74",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "What is your grade percentage?68\n",
      "GPA = 1.3\n"
     ]
    }
   ],
   "source": [
    "#get percent\n",
    "grade = input(\"What is your grade percentage?\" )\n",
    "\n",
    "if int(grade) >= 95:\n",
    "    print(\"GPA = 4.0\")\n",
    "    \n",
    "elif int(grade) >= 94:\n",
    "    print(\"GPA = 3.9\")\n",
    "    \n",
    "elif int(grade) >= 93:\n",
    "    print(\"GPA = 3.8\")\n",
    "    \n",
    "elif int(grade) >= 92:\n",
    "    print(\"GPA = 3.7\")\n",
    "    \n",
    "elif int(grade) >= 91:\n",
    "    print(\"GPA = 3.6\")\n",
    "    \n",
    "elif int(grade) >= 90:\n",
    "    print(\"GPA = 3.5\")\n",
    "    \n",
    "elif int(grade) >= 89:\n",
    "    print(\"GPA = 3.4\")\n",
    "    \n",
    "elif int(grade) >= 88:\n",
    "    print(\"GPA = 3.3\")\n",
    "    \n",
    "elif int(grade) >= 87:\n",
    "    print(\"GPA = 3.2\")\n",
    "    \n",
    "elif int(grade) >= 86:\n",
    "    print(\"GPA = 3.1\")\n",
    "    \n",
    "elif int(grade) >= 85:\n",
    "    print(\"GPA = 3.0\")\n",
    "    \n",
    "elif int(grade) >= 84:\n",
    "    print(\"GPA = 2.9\")\n",
    "    \n",
    "elif int(grade) >= 83:\n",
    "    print(\"GPA = 2.8\")\n",
    "    \n",
    "elif int(grade) >= 82:\n",
    "    print(\"GPA = 2.7\")\n",
    "    \n",
    "elif int(grade) >= 81:\n",
    "    print(\"GPA = 2.6\")\n",
    "    \n",
    "elif int(grade) >= 80:\n",
    "    print(\"GPA = 2.5\")\n",
    "    \n",
    "elif int(grade) >= 79:\n",
    "    print(\"GPA = 2.4\")\n",
    "    \n",
    "elif int(grade) >= 78:\n",
    "    print(\"GPA = 2.3\")\n",
    "    \n",
    "elif int(grade) >= 77:\n",
    "    print(\"GPA = 2.2\")\n",
    "    \n",
    "elif int(grade) >= 76:\n",
    "    print(\"GPA = 2.1\")\n",
    "    \n",
    "elif int(grade) >= 75:\n",
    "    print(\"GPA = 2.0\")\n",
    "    \n",
    "elif int(grade) >= 74:\n",
    "    print(\"GPA = 1.9\")\n",
    "    \n",
    "elif int(grade) >= 73:\n",
    "    print(\"GPA = 1.8\")\n",
    "    \n",
    "elif int(grade) >= 72:\n",
    "    print(\"GPA = 1.7\")\n",
    "    \n",
    "elif int(grade) >= 71:\n",
    "    print(\"GPA = 1.6\")\n",
    "    \n",
    "elif int(grade) >= 70:\n",
    "    print(\"GPA = 1.5\")\n",
    "    \n",
    "elif int(grade) >= 69:\n",
    "    print(\"GPA = 1.4\")\n",
    "    \n",
    "elif int(grade) >= 68:\n",
    "    print(\"GPA = 1.3\")\n",
    "    \n",
    "elif int(grade) >= 67:\n",
    "    print(\"GPA = 1.2\")\n",
    "    \n",
    "elif int(grade) >= 66:\n",
    "    print(\"GPA = 1.1\")\n",
    "    \n",
    "elif int(grade) >= 65:\n",
    "    print(\"GPA = 1.0\")\n",
    "    \n",
    "else:\n",
    "    print(\"GPA = 0.0\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e70bcbb6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e9a7c732",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
